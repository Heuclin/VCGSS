// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// my_sample
IntegerVector my_sample(IntegerVector A, int n);
RcppExport SEXP _VCGSS_my_sample(SEXP ASEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(my_sample(A, n));
    return rcpp_result_gen;
END_RCPP
}
// rInvGauss
double rInvGauss(double mu, double l);
RcppExport SEXP _VCGSS_rInvGauss(SEXP muSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(rInvGauss(mu, l));
    return rcpp_result_gen;
END_RCPP
}
// mmax
double mmax(double a, double b);
RcppExport SEXP _VCGSS_mmax(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mmax(a, b));
    return rcpp_result_gen;
END_RCPP
}
// mmin
double mmin(double a, double b);
RcppExport SEXP _VCGSS_mmin(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mmin(a, b));
    return rcpp_result_gen;
END_RCPP
}
// rmnorm
arma::vec rmnorm(arma::vec mean, arma::mat Sigma);
RcppExport SEXP _VCGSS_rmnorm(SEXP meanSEXP, SEXP SigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rmnorm(mean, Sigma));
    return rcpp_result_gen;
END_RCPP
}
// rmnorm_svd
arma::vec rmnorm_svd(arma::vec r, arma::vec mean, arma::mat V, arma::vec s);
RcppExport SEXP _VCGSS_rmnorm_svd(SEXP rSEXP, SEXP meanSEXP, SEXP VSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(rmnorm_svd(r, mean, V, s));
    return rcpp_result_gen;
END_RCPP
}
// rmnorm_svd2
arma::vec rmnorm_svd2(arma::vec mean, arma::mat V, arma::vec s);
RcppExport SEXP _VCGSS_rmnorm_svd2(SEXP meanSEXP, SEXP VSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(rmnorm_svd2(mean, V, s));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_VCGSS_my_sample", (DL_FUNC) &_VCGSS_my_sample, 2},
    {"_VCGSS_rInvGauss", (DL_FUNC) &_VCGSS_rInvGauss, 2},
    {"_VCGSS_mmax", (DL_FUNC) &_VCGSS_mmax, 2},
    {"_VCGSS_mmin", (DL_FUNC) &_VCGSS_mmin, 2},
    {"_VCGSS_rmnorm", (DL_FUNC) &_VCGSS_rmnorm, 2},
    {"_VCGSS_rmnorm_svd", (DL_FUNC) &_VCGSS_rmnorm_svd, 4},
    {"_VCGSS_rmnorm_svd2", (DL_FUNC) &_VCGSS_rmnorm_svd2, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_VCGSS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
